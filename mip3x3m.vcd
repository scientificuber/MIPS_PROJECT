$date
	Sun Nov 25 12:07:25 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module TB_3x3_Multiplication $end
$var wire 32 ! d33 [31:0] $end
$var wire 32 " d32 [31:0] $end
$var wire 32 # d31 [31:0] $end
$var wire 32 $ d23 [31:0] $end
$var wire 32 % d22 [31:0] $end
$var wire 32 & d21 [31:0] $end
$var wire 32 ' d13 [31:0] $end
$var wire 32 ( d12 [31:0] $end
$var wire 32 ) d11 [31:0] $end
$var reg 1 * clk $end
$var reg 32 + pc [31:0] $end
$scope module uut $end
$var wire 32 , pc [31:0] $end
$var wire 32 - write_back [31:0] $end
$var wire 32 . signExtended [31:0] $end
$var wire 1 / regdest $end
$var wire 32 0 out_alu [31:0] $end
$var wire 32 1 out2 [31:0] $end
$var wire 32 2 out1 [31:0] $end
$var wire 32 3 instruction [31:0] $end
$var wire 5 4 dest [4:0] $end
$var wire 32 5 data_out_mem [31:0] $end
$var wire 32 6 d33 [31:0] $end
$var wire 32 7 d32 [31:0] $end
$var wire 32 8 d31 [31:0] $end
$var wire 32 9 d23 [31:0] $end
$var wire 32 : d22 [31:0] $end
$var wire 32 ; d21 [31:0] $end
$var wire 32 < d13 [31:0] $end
$var wire 32 = d12 [31:0] $end
$var wire 32 > d11 [31:0] $end
$var wire 4 ? c_line [3:0] $end
$var wire 32 @ b [31:0] $end
$var wire 1 A alusrc $end
$var wire 1 B RegW $end
$var wire 1 C MemW $end
$var wire 1 D MemToReg $end
$var wire 1 E MemR $end
$var wire 2 F Aluout [1:0] $end
$scope begin genblk1[0] $end
$scope module uut1 $end
$var wire 32 G address [31:0] $end
$var wire 32 H data_out [31:0] $end
$upscope $end
$scope module uut2 $end
$var wire 32 I instruction [31:0] $end
$var wire 6 J opcode [5:0] $end
$var reg 2 K ALUout [1:0] $end
$var reg 1 E MemR $end
$var reg 1 D MemToReg $end
$var reg 1 C MemW $end
$var reg 1 B RegW $end
$var reg 1 A aluSrc $end
$var reg 1 / regDest $end
$upscope $end
$scope module uut3 $end
$var wire 5 L data1 [4:0] $end
$var wire 5 M data2 [4:0] $end
$var wire 1 / sel $end
$var reg 5 N out [4:0] $end
$upscope $end
$scope module uut4 $end
$var wire 5 O address1 [4:0] $end
$var wire 5 P address2 [4:0] $end
$var wire 5 Q dest [4:0] $end
$var wire 1 B regwrite $end
$var wire 32 R write_back [31:0] $end
$var wire 32 S out2 [31:0] $end
$var wire 32 T out1 [31:0] $end
$scope module uut1 $end
$var wire 5 U address1 [4:0] $end
$var wire 5 V address2 [4:0] $end
$var wire 5 W address3 [4:0] $end
$var wire 1 B regWrite $end
$var wire 32 X write_back [31:0] $end
$var reg 1 Y count $end
$var reg 32 Z dataOut1 [31:0] $end
$var reg 32 [ dataOut2 [31:0] $end
$upscope $end
$upscope $end
$scope module uut5 $end
$var wire 32 \ data1 [31:0] $end
$var wire 32 ] data2 [31:0] $end
$var wire 1 A sel $end
$var reg 32 ^ out [31:0] $end
$upscope $end
$scope module uut6 $end
$var wire 2 _ aluOp [1:0] $end
$var wire 6 ` f6 [5:0] $end
$var reg 4 a out4 [3:0] $end
$upscope $end
$scope module uut7 $end
$var wire 32 b a [31:0] $end
$var wire 32 c b [31:0] $end
$var wire 4 d controlLines [3:0] $end
$var reg 32 e out [31:0] $end
$upscope $end
$scope module uut8 $end
$var wire 32 f address [31:0] $end
$var wire 32 g data_in [31:0] $end
$var wire 1 E memread $end
$var wire 1 C memwrite $end
$var reg 32 h d11 [31:0] $end
$var reg 32 i d12 [31:0] $end
$var reg 32 j d13 [31:0] $end
$var reg 32 k d21 [31:0] $end
$var reg 32 l d22 [31:0] $end
$var reg 32 m d23 [31:0] $end
$var reg 32 n d31 [31:0] $end
$var reg 32 o d32 [31:0] $end
$var reg 32 p d33 [31:0] $end
$var reg 32 q data_out [31:0] $end
$upscope $end
$scope module uut9 $end
$var wire 32 r data1 [31:0] $end
$var wire 32 s data2 [31:0] $end
$var wire 1 D sel $end
$var reg 32 t out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
b0 g
bx f
bx e
bx d
bx c
b0 b
bx a
bx `
bx _
bx ^
b0xxxxxxxxxxxxxxxx ]
b0 \
b0 [
b0 Z
1Y
bx X
bx W
bx V
bx U
b0 T
b0 S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
b11111111111111111111111111111100 G
bx F
xE
xD
xC
xB
xA
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
b0 2
b0 1
bx 0
x/
b0xxxxxxxxxxxxxxxx .
bx -
b11111111111111111111111111111100 ,
b11111111111111111111111111111100 +
0*
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#20000
b1000000000 0
b1000000000 e
b1000000000 f
b1000000000 r
b1 -
b1 R
b1 X
b1 t
b1 5
b1 q
b1 s
b1000000000 @
b1000000000 ^
b1000000000 c
b10 ?
b10 a
b10 d
b1 1
b1 S
b1 [
b1 \
b1 g
1Y
b1000 4
b1000 N
b1000 Q
b1000 U
0/
1A
0C
1D
1E
1B
b0 F
b0 K
b0 _
b1000000000 .
b1000000000 ]
b0 `
b1000 P
b1000 W
b10000 O
b10000 V
b0 M
b1000 L
b100011 J
b10001110000010000000001000000000 3
b10001110000010000000001000000000 H
b10001110000010000000001000000000 I
b0 +
b0 ,
b0 G
1*
#30000
0*
#40000
b1100000000 0
b1100000000 e
b1100000000 f
b1100000000 r
b1100000000 @
b1100000000 ^
b1100000000 c
1Y
b1001 4
b1001 N
b1001 Q
b1001 U
b1100000000 .
b1100000000 ]
b1001 P
b1001 W
b1001 L
b10001110000010010000001100000000 3
b10001110000010010000001100000000 H
b10001110000010010000001100000000 I
b100 +
b100 ,
b100 G
1*
#50000
0*
#60000
b10 1
b10 S
b10 [
b10 \
b10 g
b10 -
b10 R
b10 X
b10 t
b10 5
b10 q
b10 s
b1000000100 0
b1000000100 e
b1000000100 f
b1000000100 r
b1000000100 @
b1000000100 ^
b1000000100 c
1Y
b1010 4
b1010 N
b1010 Q
b1010 U
b1000000100 .
b1000000100 ]
b100 `
b1010 P
b1010 W
b1010 L
b10001110000010100000001000000100 3
b10001110000010100000001000000100 H
b10001110000010100000001000000100 I
b1000 +
b1000 ,
b1000 G
1*
#70000
0*
#80000
b0 1
b0 S
b0 [
b0 \
b0 g
b0 -
b0 R
b0 X
b0 t
b0 5
b0 q
b0 s
b1100000100 0
b1100000100 e
b1100000100 f
b1100000100 r
b1100000100 @
b1100000100 ^
b1100000100 c
1Y
b1011 4
b1011 N
b1011 Q
b1011 U
b1100000100 .
b1100000100 ]
b1011 P
b1011 W
b1011 L
b10001110000010110000001100000100 3
b10001110000010110000001100000100 H
b10001110000010110000001100000100 I
b1100 +
b1100 ,
b1100 G
1*
#90000
0*
#100000
b11 1
b11 S
b11 [
b11 \
b11 g
b11 -
b11 R
b11 X
b11 t
b11 5
b11 q
b11 s
b1000001000 0
b1000001000 e
b1000001000 f
b1000001000 r
b1000001000 @
b1000001000 ^
b1000001000 c
1Y
b1100 4
b1100 N
b1100 Q
b1100 U
b1000001000 .
b1000001000 ]
b1000 `
b1100 P
b1100 W
b1100 L
b10001110000011000000001000001000 3
b10001110000011000000001000001000 H
b10001110000011000000001000001000 I
b10000 +
b10000 ,
b10000 G
1*
#110000
0*
#120000
b0 1
b0 S
b0 [
b0 \
b0 g
b0 -
b0 R
b0 X
b0 t
b0 5
b0 q
b0 s
b1100001000 0
b1100001000 e
b1100001000 f
b1100001000 r
b1100001000 @
b1100001000 ^
b1100001000 c
1Y
b1101 4
b1101 N
b1101 Q
b1101 U
b1100001000 .
b1100001000 ]
b1101 P
b1101 W
b1101 L
b10001110000011010000001100001000 3
b10001110000011010000001100001000 H
b10001110000011010000001100001000 I
b10100 +
b10100 ,
b10100 G
1*
#130000
0*
#140000
b1 0
b1 e
b1 f
b1 r
b1 -
b1 R
b1 X
b1 t
b1 @
b1 ^
b1 c
b100 ?
b100 a
b100 d
b1 1
b1 S
b1 [
b1 \
b1 g
b1 2
b1 T
b1 Z
b1 b
1Y
b1110 4
b1110 N
b1110 Q
b1110 U
1/
0A
0D
0E
b10 F
b10 K
b10 _
b111000000011000 .
b111000000011000 ]
b11000 `
b1001 P
b1001 W
b1000 O
b1000 V
b1110 M
b1001 L
b0 J
b1000010010111000000011000 3
b1000010010111000000011000 H
b1000010010111000000011000 I
b11000 +
b11000 ,
b11000 G
1*
#150000
0*
#160000
b0 -
b0 R
b0 X
b0 t
b0 0
b0 e
b0 f
b0 r
b0 @
b0 ^
b0 c
b0 1
b0 S
b0 [
b0 \
b0 g
b10 2
b10 T
b10 Z
b10 b
1Y
b1111 4
b1111 N
b1111 Q
b1111 U
b111100000011000 .
b111100000011000 ]
b1011 P
b1011 W
b1010 O
b1010 V
b1111 M
b1011 L
b1010010110111100000011000 3
b1010010110111100000011000 H
b1010010110111100000011000 I
b11100 +
b11100 ,
b11100 G
1*
#170000
0*
#180000
b11 2
b11 T
b11 Z
b11 b
1Y
b10101 4
b10101 N
b10101 Q
b10101 U
b1010100000011000 .
b1010100000011000 ]
b1101 P
b1101 W
b1100 O
b1100 V
b10101 M
b1101 L
b1100011011010100000011000 3
b1100011011010100000011000 H
b1100011011010100000011000 I
b100000 +
b100000 ,
b100000 G
1*
#190000
0*
#200000
b10 ?
b10 a
b10 d
b0 2
b0 T
b0 Z
b0 b
1Y
b1110 4
b1110 N
b1110 Q
b1110 U
b111000000100000 .
b111000000100000 ]
b100000 `
b1111 P
b1111 W
b1110 O
b1110 V
b1110 M
b1111 L
b1110011110111000000100000 3
b1110011110111000000100000 H
b1110011110111000000100000 I
b100100 +
b100100 ,
b100100 G
1*
#210000
0*
#220000
1Y
b10101 P
b10101 W
b10101 L
b1110101010111000000100000 3
b1110101010111000000100000 H
b1110101010111000000100000 I
b101000 +
b101000 ,
b101000 G
1*
#230000
0*
#240000
b0 )
b0 >
b0 h
b100000000 0
b100000000